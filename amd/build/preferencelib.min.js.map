{"version":3,"file":"preferencelib.min.js","sources":["../src/preferencelib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper for handling user preferences.\n *\n * @module     tiny_elements/preferencelib\n * @copyright  2024 ISB Bayern\n * @author     Stefan Hanauska <stefan.hanauska@csg-in.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nexport const Preferences = {\n    category: 'elements_category',\n    // eslint-disable-next-line camelcase\n    category_flavors: 'elements_category_flavors',\n    // eslint-disable-next-line camelcase\n    component_variants: 'elements_component_variants'\n};\n\n/**\n * Load user preferences.\n * @param {string} name\n * @returns {object}\n */\nexport const loadPreferences = async(name) => {\n    const request = {\n        methodname: 'core_user_get_user_preferences',\n        args: {\n            name: name\n        }\n    };\n\n    await Ajax.call([request])[0]\n        .then(result => {\n            try {\n                let preferences = JSON.parse(result.preferences[0].value);\n                return preferences;\n            } catch (err) {\n                Notification.exception(err);\n                return {};\n            }\n        }).catch(err => {\n            Notification.exception(err);\n            return {};\n        });\n};\n\n/**\n * Save user preferences.\n * @param {object} rawPreferences\n * @returns {Promise}\n */\nexport const savePreferences = (rawPreferences) => {\n    const request = {\n        methodname: 'core_user_update_user_preferences',\n        args: {\n            preferences: rawPreferences\n        }\n    };\n\n    return Ajax.call([request])[0].catch(Notification.exception);\n};\n"],"names":["category","category_flavors","component_variants","async","request","methodname","args","name","Ajax","call","then","result","JSON","parse","preferences","value","err","exception","catch","rawPreferences","Notification"],"mappings":";;;;;;;;wPA2B2B,CACvBA,SAAU,oBAEVC,iBAAkB,4BAElBC,mBAAoB,wDAQOC,MAAAA,aACrBC,QAAU,CACZC,WAAY,iCACZC,KAAM,CACFC,KAAMA,aAIRC,cAAKC,KAAK,CAACL,UAAU,GACtBM,MAAKC,oBAEoBC,KAAKC,MAAMF,OAAOG,YAAY,GAAGC,OAErD,MAAOC,kCACQC,UAAUD,KAChB,OAEZE,OAAMF,4BACQC,UAAUD,KAChB,gCASaG,uBACtBf,QAAU,CACZC,WAAY,oCACZC,KAAM,CACFQ,YAAaK,wBAIdX,cAAKC,KAAK,CAACL,UAAU,GAAGc,MAAME,sBAAaH"}