{"version":3,"file":"management.min.js","sources":["../src/management.js"],"sourcesContent":["import Modal from 'core/modal';\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {exception as displayException, deleteCancelPromise} from 'core/notification';\nimport {call as fetchMany} from 'core/ajax';\n\nclass PreviewModal extends Modal {\n    static TYPE = \"tiny_elements/management_preview\";\n    static TEMPLATE = \"tiny_elements/management_preview\";\n    configure(modalConfig) {\n        modalConfig.removeOnClose = true;\n        modalConfig.large = true;\n        super.configure(modalConfig);\n    }\n}\n\nexport const init = async(params) => {\n\n    // Add listener to import xml files.\n    let importxml = document.getElementById('elements_import');\n    importxml.addEventListener('click', async(e) => {\n        importModal(e);\n    });\n\n    // Add listener for adding a new item.\n    let additem = document.getElementsByClassName('add');\n    additem.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to edit items.\n    let edititems = document.getElementsByClassName('edit');\n    edititems.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to delete items.\n    let deleteitems = document.getElementsByClassName('delete');\n    deleteitems.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            deleteModal(e, element.dataset.id, element.dataset.title, element.dataset.table);\n        });\n    });\n\n    // Add listener to preview items.\n    let previewitems = document.getElementsByClassName('preview');\n    previewitems.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            previewModal(e);\n        });\n    });\n\n    // Add listener to select compcat to show corresponding items.\n    let compcats = document.getElementsByClassName('compcat');\n    compcats.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showItems(e, element.dataset.compcat);\n        });\n    });\n\n    // Add listener to manage component flavor relation.\n    let compflavor = document.getElementById('elements_compflavor_button');\n    compflavor.addEventListener('click', async(e) => {\n        compflavorModal(e);\n    });\n\n    // Add listener to duplicate items.\n    let duplicateitems = document.getElementsByClassName('duplicate');\n    duplicateitems.forEach(element => {\n        element.addEventListener('click', async() => {\n            duplicateItem(element.dataset.id, element.dataset.table);\n            reload();\n        });\n    });\n\n    // Add image and text to item setting click area.\n    let enlargeItems = document.querySelectorAll(\n        '.flavor .card-body > .clickingextended, .component .card-body > .clickingextended, .variant .card-body > .clickingextended'\n    );\n    enlargeItems.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            let item = e.target.closest('.item');\n            item.querySelector('a.edit').click();\n        });\n    });\n\n    // After submitting a new item, reset active compcat.\n    if (params.compcatactive) {\n        let compcat = document.querySelector('.compcat[data-compcat=\"' + params.compcatactive + '\"]');\n        if (compcat) {\n            showItems(false, params.compcatactive);\n            compcat.classList.add('active');\n        }\n    }\n};\n\n/**\n * Show dynamic form to add/edit a source.\n * @param {*} e\n * @param {*} id\n * @param {*} table\n */\nfunction showModal(e, id, table) {\n    e.preventDefault();\n    let title;\n    if (id == 0) {\n        title = getString('additem', 'tiny_elements');\n    } else {\n        title = getString('edititem', 'tiny_elements');\n    }\n\n    const modalForm = new ModalForm({\n        // Set formclass, depending on component.\n        formClass: \"tiny_elements\\\\form\\\\management_\" + table + \"_form\",\n        args: {\n            id: id,\n        },\n        modalConfig: {title: title},\n    });\n    // Conditional reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => reloadIfNew(modalForm.getFormNode()));\n\n    modalForm.show();\n}\n\n/**\n * Show modal to preview css version.\n * @param {*} e\n */\nasync function previewModal(e) {\n    e.preventDefault();\n    let preview = e.target.closest(\".preview\");\n    const modal = await PreviewModal.create({\n        templateContext: {\n            component: preview.dataset.component,\n            flavors: preview.dataset.flavors.trim().split(\" \"),\n            config: M.cfg,\n        },\n    });\n    modal.show();\n}\n\n/**\n * Show dynamic form to import xml backups.\n * @param {*} e\n */\nfunction importModal(e) {\n    e.preventDefault();\n    let title = getString('import', 'tiny_elements');\n\n    const modalForm = new ModalForm({\n        // Load import form.\n        formClass: \"tiny_elements\\\\form\\\\management_import_form\",\n        args: {},\n        modalConfig: {title: title},\n    });\n    // Reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n}\n\n/**\n * Load modal to edit icon urls.\n * @param {*} e\n */\nfunction compflavorModal(e) {\n    e.preventDefault();\n    let title = getString('manage', 'tiny_elements');\n\n    const modalForm = new ModalForm({\n        // Load import form.\n        formClass: \"tiny_elements\\\\form\\\\management_comp_flavor_form\",\n        args: {},\n        modalConfig: {title: title},\n    });\n\n    modalForm.show();\n}\n\n/**\n * Show dynamic form to delete a source.\n * @param {*} e\n * @param {*} id\n * @param {*} title\n * @param {*} table\n */\nfunction deleteModal(e, id, title, table) {\n    e.preventDefault();\n\n    deleteCancelPromise(\n        getString('delete', 'tiny_elements', title),\n        getString('deletewarning', 'tiny_elements'),\n    ).then(async() => {\n        if (id !== 0) {\n            try {\n                const deleted = await deleteItem(id, table);\n                if (deleted) {\n                    const link = document.querySelector('[data-table=\"' + table + '\"][data-id=\"' + id + '\"]');\n                    if (link) {\n                        const card = link.closest(\".item\");\n                        card.remove();\n                    }\n                }\n            } catch (error) {\n                displayException(error);\n            }\n        }\n        return;\n    }).catch(() => {\n        return;\n    });\n}\n\n/**\n * Delete elements items.\n * @param {*} id\n * @param {*} table\n * @returns {mixed}\n */\nexport const deleteItem = (\n    id,\n    table,\n) => fetchMany(\n    [{\n        methodname: 'tiny_elements_delete_item',\n        args: {\n            id,\n            table,\n        }\n    }])[0];\n\n/**\n * Show items after clicking a compcat.\n * @param {*} e\n * @param {*} compcat\n */\nfunction showItems(e, compcat) {\n    // But first hide all items.\n    let itemsHide = document.querySelectorAll('.flavor, .component, .variant');\n    itemsHide.forEach(element => {\n        element.classList.add('hidden');\n    });\n\n    // Show component and variants with compcat name and read the flavors.\n    let itemsShow = document.getElementsByClassName(compcat);\n    let usedFlavors = [];\n    itemsShow.forEach(element => {\n        element.classList.remove('hidden');\n        // Get all flavors to show if on compcat element.\n        if (typeof element.dataset.flavors !== 'undefined') {\n            let flavors = element.dataset.flavors.split(' ');\n            for (let value of flavors) {\n                if (!usedFlavors.includes(value) && value.length != 0) {\n                    usedFlavors.push(value);\n                }\n            }\n        }\n    });\n\n    // Show the flavors.\n    let flavorstring = usedFlavors.map(item => `.${item}`).join(', ');\n    if (flavorstring.length) {\n        let flavorsShow = document.querySelectorAll(flavorstring);\n        flavorsShow.forEach(element => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    // Show add buttons.\n    let addsShow = document.getElementsByClassName('addcontainer');\n    addsShow.forEach(element => {\n        element.classList.remove('hidden');\n    });\n\n    // Unmark all and mark clicked compcat.\n    if (e) {\n        let items = document.getElementsByClassName('compcat');\n        items.forEach(element => {\n            element.classList.remove('active');\n        });\n        let item = e.target.closest('.compcat');\n        item.classList.add('active');\n    }\n\n    // Special case, unassigned items, show all items without connection to compcat.\n    if (compcat == 'found-items') {\n        let found = document.querySelector('.compcat[data-compcat=\"found-items\"]');\n        if (found.dataset.loneflavors.length) {\n            let flavorsShow = document.querySelectorAll(found.dataset.loneflavors);\n            flavorsShow.forEach(element => {\n                element.classList.remove('hidden');\n            });\n        }\n        if (found.dataset.lonevariants.length) {\n            let variantsShow = document.querySelectorAll(found.dataset.lonevariants);\n            variantsShow.forEach(element => {\n                element.classList.remove('hidden');\n            });\n        }\n        if (found.dataset.lonecomponents.length) {\n            let componentsShow = document.querySelectorAll(found.dataset.lonecomponents);\n            componentsShow.forEach(element => {\n                element.classList.remove('hidden');\n            });\n        }\n    }\n}\n\n/**\n * Reload for new items.\n * @param {*} form\n */\nfunction reloadIfNew(form) {\n    // Newly created element without id?\n    if (!form.elements.id.value) {\n        reload();\n    }\n}\n\n/**\n * Reload page with active compcat.\n */\nfunction reload() {\n    // Reload page with active compcat.\n    const compcat = document.querySelector('.compcat.active');\n    const currentUrl = new URL(window.location.href);\n    currentUrl.searchParams.set('compcat', compcat.dataset.compcat);\n    window.location.href = currentUrl.toString();\n}\n\n/**\n * Duplicate elements items.\n * @param {*} id\n * @param {*} table\n * @returns {mixed}\n */\nexport const duplicateItem = (\n    id,\n    table,\n) => fetchMany(\n    [{\n        methodname: 'tiny_elements_duplicate_item',\n        args: {\n            id,\n            table,\n        }\n    }])[0];\n\n"],"names":["PreviewModal","Modal","configure","modalConfig","removeOnClose","large","showModal","e","id","table","title","preventDefault","modalForm","ModalForm","formClass","args","addEventListener","events","FORM_SUBMITTED","getFormNode","elements","value","reload","show","async","document","getElementById","location","importModal","getElementsByClassName","forEach","element","dataset","then","deleteItem","link","querySelector","closest","remove","error","catch","deleteModal","preview","target","create","templateContext","component","flavors","trim","split","config","M","cfg","previewModal","showItems","compcat","compflavorModal","duplicateItem","querySelectorAll","click","params","compcatactive","classList","add","methodname","itemsShow","usedFlavors","includes","length","push","flavorstring","map","item","join","found","loneflavors","lonevariants","lonecomponents","currentUrl","URL","window","href","searchParams","set","toString"],"mappings":"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"}